---
title: "ST558 Final Project Modeling Document"
author: "Kyra Kapsaskis"
format: html
editor: visual
---

# Splitting the data into a test and training set

```{r}
# set a seed for reproducibility
set.seed(10)

#indices to split on
train <- sample(1:nrow(heart_data), size = nrow(heart_data)*0.8)
test <- dplyr::setdiff(1:nrow(heart_data), train)

#subset
heartTrain <- heart_data[train, ]
heartTest <- heart_data[test, ]
```

# fit three candidate logistic regression models and choose the best model using CV with log-loss as your metric.

```{r}
# defining cv arguments that will be used as an argument inside each model function

cv_settings <- trainControl(method = "repeatedcv", number = 10, repeats = 3)
```

## First Logistic Regression

```{r}
# R will do the dummy coding for you so you can use the regular categorical variables, not dummy. use factor variables

#glmFit <- glm(good ~ yards, 
#             data = FGData, 
#              family = "binomial")

my_logreg_1 <- train(HeartDisease_factor ~ ChestPainType.ATA + RestingECG.ST, data = heartTrain, method = "glm", family = "binomial", trControl = cv_settings)

```

```{r}
my_logreg_1
```

```{r}
log1_predict <- predict(my_logreg_1, heartTest)
```

```{r}
log1_predict
```

```{r}
summary(log1_predict)
```

## Second Logistic Regression


```{r}
my_logreg_2 <- train(HeartDisease_factor ~ Age + Cholesterol, data = heartTrain, method = "glm", family = "binomial", trControl = cv_settings)

my_logreg_2

log2_predict <- predict(my_logreg_2, heartTest)

summary(log2_predict)

```

## Third Logistic Regression

```{r}
my_logreg_3 <- train(HeartDisease_factor ~ MaxHR + RestingBP, data = heartTrain, method = "glm", family = "binomial", trControl = cv_settings)

log3_predict <- predict(my_logreg_3, heartTest)

summary(log3_predict)
```

## Confusion Matrices

```{r}
confusionMatrix(log1_predict, heartTest$HeartDisease_factor)
confusionMatrix(log2_predict, heartTest$HeartDisease_factor)
confusionMatrix(log3_predict, heartTest$HeartDisease_factor)
```






